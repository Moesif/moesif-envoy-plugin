static_resources:
  listeners:
  - address:
      socket_address:
        protocol: TCP
        address: 0.0.0.0
        port_value: 8443
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: AUTO
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: app
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/uuid"
                route:
                  cluster: dynamic_forward_proxy_cluster
                typed_per_filter_config:
                  envoy.filters.http.dynamic_forward_proxy:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.dynamic_forward_proxy.v3.PerRouteConfig
                    host_rewrite_literal: httpbin.org
              - match:
                  prefix: "/"
                route:
                  cluster: dynamic_forward_proxy_cluster
          http_filters:
          - name: envoy.filters.http.dynamic_forward_proxy
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.dynamic_forward_proxy.v3.FilterConfig
              dns_cache_config:
                name: dynamic_forward_proxy_cache_config
                dns_lookup_family: V4_ONLY
          - name: envoy.filters.http.lua
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
              inline_code: |
                  local log = require("moesif.plugins.log")

                  -- Moesif configs
                  log.set_application_id("Your Moesif Application Id")

                  function envoy_on_request(request_handle)
                  -- Log Event Request to Moesif
                  log.log_request(request_handle)
                  end

                  function envoy_on_response(response_handle)
                  -- Log Event Response to Moesif
                  log.log_response(response_handle)
                  end   
          - name: envoy.filters.http.router
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          common_tls_context:
            tls_certificates:
            # The following self-signed certificate pair is generated using:
            # $ openssl req -x509 -newkey rsa:2048 -keyout a/front-proxy-key.pem -out  a/front-proxy-crt.pem -days 3650 -nodes -subj '/CN=front-envoy'
            #
            # Instead of feeding it as an inline_string, certificate pair can also be fed to Envoy
            # via filename. Reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/core/v3/base.proto#config-core-v3-datasource.
            #
            # Or in a dynamic configuration scenario, certificate pair can be fetched remotely via
            # Secret Discovery Service (SDS). Reference: https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret.
            - certificate_chain:
                inline_string: |
                  -----BEGIN CERTIFICATE-----
                  MIIDCTCCAfGgAwIBAgIUVvsHgQIiJbafzbZnmeittvD5PbUwDQYJKoZIhvcNAQEL
                  BQAwFDESMBAGA1UEAwwJbG9jYWxob3N0MB4XDTIxMDQwODAxMTY0NVoXDTMxMDQw
                  NjAxMTY0NVowFDESMBAGA1UEAwwJbG9jYWxob3N0MIIBIjANBgkqhkiG9w0BAQEF
                  AAOCAQ8AMIIBCgKCAQEAqTzDL4d0mpP4KlU6Gufw9MGRmuFJFKN3uw3sC+Sp9oFv
                  FNFRDxIJS8j/3yuphdiOnR3J2kUQXhv/1uaWHjtBLevsALDdcpoj97TbqkGk46Oa
                  gt+DTrNAwaqOhxZ41Qc3Cs46+/lAnlzWfRn+fQrCning/b1neqLaUGG93HOmK8S4
                  aeeZFzw4UYqGuICKoLX9ggCBrjXz8ZM43gu2di9IY1wopQbx5KVGHT9C/2yhWmJN
                  JWCdSEurpuU8z+3VEx2mKtOR/RJU9Kt146bIF1HHHMNj2ykCYPpwHxFPMHumpzMi
                  4j6xV6N6oF8vGqOIWInFLtawIa0sgtxP/JlxvyDEzQIDAQABo1MwUTAdBgNVHQ4E
                  FgQULLocRCV5o4Q9puDRbpfsN6Tt0QgwHwYDVR0jBBgwFoAULLocRCV5o4Q9puDR
                  bpfsN6Tt0QgwDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAQEAPK8+
                  hSc6CwKPsHoGe1mV2HVmUwBjVhPZOaMNjUQ2T9nwEHnn+C3+OmyV+fNprvex00Th
                  gVYq7pZe17eBtLjx24mJWpm3b5M13IdsQpDEzl9gtRpKSjIPHjhlYgGuBbubIjKv
                  ahQJqhXCTw8toI1IiftczUyGNVdsFzEuXGwwIQoPMUSR3PXTtcd+DpbT3/f6hfpW
                  VBqCRSTWj+HjCB9Wnx8iKPaQcsBbWhRmNMpIwjAEnXySLesS4fzFFu3GCyAYJLUZ
                  Zik0LutfzCUyYiIYEEuUWCVBxz2Zxn2gCm2D103Z6EWPAyen5db5tOxo1ArPGm0f
                  FtIhZGlq9sXULnW8Nw==
                  -----END CERTIFICATE-----
              private_key:
                inline_string: |
                  -----BEGIN PRIVATE KEY-----
                  MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCpPMMvh3Sak/gq
                  VToa5/D0wZGa4UkUo3e7DewL5Kn2gW8U0VEPEglLyP/fK6mF2I6dHcnaRRBeG//W
                  5pYeO0Et6+wAsN1ymiP3tNuqQaTjo5qC34NOs0DBqo6HFnjVBzcKzjr7+UCeXNZ9
                  Gf59CsKeKeD9vWd6otpQYb3cc6YrxLhp55kXPDhRioa4gIqgtf2CAIGuNfPxkzje
                  C7Z2L0hjXCilBvHkpUYdP0L/bKFaYk0lYJ1IS6um5TzP7dUTHaYq05H9ElT0q3Xj
                  psgXUcccw2PbKQJg+nAfEU8we6anMyLiPrFXo3qgXy8ao4hYicUu1rAhrSyC3E/8
                  mXG/IMTNAgMBAAECggEBAI/q8EGW+34In13ApG0FGU/K3LvNIYy/hq43pKhoiHDs
                  mT4m0rvyJp2gDJgIVV1RT9Yk4ucPHGArh2GFLdv/n+ohWs0rmuY+Vp/r2XHr6QD8
                  vATXdp6SqVsIY7RVU+Q1AoXZ4ycsS9tgL7arSFOltuMx0fd1/m2319fLht3WK1XD
                  zrfIy5swIPFTiLEDUug8uirOM4mh80iTkvNK21uyap5xlxKE408eDuaVFiXT2NOQ
                  Du0te5FVdflRGQNC5tdIz3FmwqV1yRuvryHNbY06/3TfoHzJpTPByG/yztAFMYqi
                  RpUt972e+PKzpKv2j0bh36ebr9znwyCGUBXcVeM9OTECgYEA1hOpZxHSSvjsUDMq
                  llQcPvdE9kVi81CCczeI42Vl412R9VybDllwW5nEhLUZjJo9Nrz2TiwoRQkPmPVZ
                  vo8vzd7Km9x1nQf+R5mFrIQx+jyUQw/bYVqeGIXXvr/sXVH9V9KQ9G0h5FMB0lwZ
                  whIPiJ2ztZZ5yiOBKJlZexSsKLsCgYEAymEovN7wygHIL/7lTkucLUznUXWyg343
                  SRBfJihoNK13fltrg1IrKzRKA1fuJHZ2ZdmO7J0+wyuStmjYk0Mp4KDki249JTRG
                  Yr1PprAPaGjCdcnqWNjDEX7AfNJvo84zkH0SpEwYM9SEvWjrp4eR7UvVkqzAsiGT
                  x1RYzk0HlBcCgYB7lOQhTQdyIlsBPVhjafDYZJRZ+tpRjfOQocmTRDDaXWTqGOim
                  Evmq14y783PpWAzocZNas2EX4VAww8poGG7HUMrzyQPYgAnJuZWSbsoPJDOOtzO0
                  8sP7ciCGzHKduLwgm7z0bZ+4GDcgAe0YvKZc/nUE6fYqu+5Oyp/+ToPICwKBgCQ1
                  yiIxCYg7VWQxCTo/EQyR6/mJQ41/ccji4wNiy3JRb0XueYgflZW/X1bFztg7Uefb
                  S1VOtUIac7+rdsSyibWlU/8WlF4pwkY8dRnv+nHF/LUykXmgHxbsROiQhmUaqeM6
                  XbGD4/iyF6YENdXdzeBVZzs9KaU1mMlbcCBJbAe1AoGAUu6Uym3wcRr69pt/nTqE
                  e9mmUDj5hgz1kGWLIGrMhF0oq5ZuT1+aMeXp0U+SDwn2DobInV0yMwRjNYiQVjPg
                  jy4EINnENJET58kGLZHJfoW6ZCrgkFn846QfiGoTEGKLFEUiM34Tq7OcXW9NMJse
                  +mzmtLehggHi2JiE3yDT0EE=
                  -----END PRIVATE KEY-----

  clusters:
  - name: dynamic_forward_proxy_cluster
    connect_timeout: 1s
    lb_policy: CLUSTER_PROVIDED
    cluster_type:
      name: envoy.clusters.dynamic_forward_proxy
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.clusters.dynamic_forward_proxy.v3.ClusterConfig
        dns_cache_config:
          name: dynamic_forward_proxy_cache_config
          dns_lookup_family: V4_ONLY
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        common_tls_context:
          validation_context:
            trusted_ca: {filename: /etc/ssl/certs/ca-certificates.crt}
  - name: moesifprod
    connect_timeout: 0.25s
    type: logical_dns
    lb_policy: round_robin
    load_assignment:
      cluster_name: moesifprod
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: api.moesif.net
                port_value: 443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        sni: api.moesif.net
        common_tls_context: 
          validation_context:
            match_subject_alt_names:
            - exact: "*.moesif.net"
            trusted_ca:
              filename: /etc/ssl/certs/ca-certificates.crt
